# Generated by Django 5.1.6 on 2025-06-15 17:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Field_Study',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Fields of Study',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('university', models.CharField(choices=[('UB', 'Universitat de Barcelona'), ('UAB', 'Universitat Autònoma de Barcelona'), ('UPC', 'Universitat Politècnica de Catalunya'), ('UPF', 'Universitat Pompeu Fabra'), ('URV', 'Universitat Rovira i Virgili'), ('UdG', 'Universitat de Girona'), ('UdL', 'Universitat de Lleida'), ('UOC', 'Universitat Oberta de Catalunya'), ('UVic', 'Universitat de Vic'), ('UIC', 'Universitat Internacional de Catalunya'), ('URL', 'Universitat Ramon Llull'), ('UAO', 'Universitat Abat Oliba CEU (UAO)'), ('EAE', 'EAE Business School'), ('Other', 'Other')], default='', max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='unicat.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ErasmusProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(blank=True, null=True)),
                ('university', models.CharField(default='', max_length=64)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('rank', models.CharField(blank=True, max_length=20, null=True)),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('focus', models.CharField(blank=True, max_length=100, null=True)),
                ('research', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='erasmus_images/')),
                ('ar_score', models.FloatField(blank=True, null=True)),
                ('ar_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('er_score', models.FloatField(blank=True, null=True)),
                ('er_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('fsr_score', models.FloatField(blank=True, null=True)),
                ('fsr_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('cpf_score', models.FloatField(blank=True, null=True)),
                ('cpf_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('ifr_score', models.FloatField(blank=True, null=True)),
                ('ifr_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('isr_score', models.FloatField(blank=True, null=True)),
                ('isr_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('irn_score', models.FloatField(blank=True, null=True)),
                ('irn_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('ger_score', models.FloatField(blank=True, null=True)),
                ('ger_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('sus_score', models.FloatField(blank=True, null=True)),
                ('sus_rank', models.CharField(blank=True, max_length=20, null=True)),
                ('overall_score', models.FloatField(blank=True, null=True)),
                ('country_code', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='unicat.country')),
            ],
            options={
                'verbose_name_plural': 'Erasmus Programs',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255)),
                ('description', models.TextField(default='')),
                ('date', models.DateTimeField()),
                ('duration', models.CharField(default='', max_length=64)),
                ('faculty', models.CharField(blank=True, default='', max_length=255)),
                ('location', models.CharField(default='', max_length=255)),
                ('university', models.CharField(blank=True, choices=[('UB', 'Universitat de Barcelona'), ('UAB', 'Universitat Autònoma de Barcelona'), ('UPC', 'Universitat Politècnica de Catalunya'), ('UPF', 'Universitat Pompeu Fabra'), ('URV', 'Universitat Rovira i Virgili'), ('UdG', 'Universitat de Girona'), ('UdL', 'Universitat de Lleida'), ('UOC', 'Universitat Oberta de Catalunya'), ('UVic', 'Universitat de Vic'), ('UIC', 'Universitat Internacional de Catalunya'), ('URL', 'Universitat Ramon Llull'), ('UAO', 'Universitat Abat Oliba CEU (UAO)'), ('EAE', 'EAE Business School'), ('Other', 'Other')], default='', max_length=64)),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('type', models.CharField(choices=[('conference', 'Conference'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('networking', 'Networking'), ('hackathon', 'Hackathon'), ('course', 'Course'), ('open house', 'Open House'), ('other', 'Other')], default='', max_length=64)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_pictures/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='resources/')),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('slides', 'Slides'), ('pdf', 'Pdf'), ('video', 'Video'), ('web', 'Web'), ('image', 'Image'), ('other', 'Other')], default='', max_length=64)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('field_of_study', models.CharField(default='', max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ErasmusParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('contact_info', models.CharField(max_length=255)),
                ('interests', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='unicat.erasmusprogram')),
            ],
            options={
                'unique_together': {('user', 'program')},
            },
        ),
    ]
